@use 'sass:color';
@use 'sass:list';
@use 'mixins';

$static-pic-background: rgb(0, 146, 252);
$categories-colors: rgba(0, 0, 0, 1), rgba(255, 43, 6, 1), rgba(0, 231, 112, 1), rgba(255, 139, 252, 1), rgba(247, 144, 30, 1);

#podklad_ {
    position: absolute;
    top: 0;
    background: url("../podklad.png");
    background-size: 100%;
    background-repeat: no-repeat;
    width: 100vw;
    height: 1000vw;
    z-index: -1000;
}

.center-text {
    max-width: 72ch;
    margin: 0 auto;
    text-align: center;
}

.color-highlight {
    color: $static-pic-background;
}

html, body {
    padding: 0;
    margin: 0;
    font-family: "font";
    font-weight: 400;
    // width: 100vw;
    font-size: 16px;
}

h1 {
    font-size: 3rem;
}

h2 {
    font-size: 1.75rem;
}

a {
    text-decoration: none;
}

.color-white {
    color: white;
}

nav {
    text-transform: uppercase;
    font-size: 1.3rem;
    display: flex;
    align-items: center;
    justify-content: center;
    width: 100%;
    gap: 1rem;
    margin-top: 2.8em;
    padding-bottom:2.8em;
    top: .9rem;
    position: sticky;
    z-index: 10000;
    a {
        color: inherit;
        padding: .6em 1.5em;
        border-radius: .7em;
    }
    @for $i from 1 through length($categories-colors) {
        $color: nth($categories-colors, $i);
        a:nth-child(#{$i}) {
          background-color: $color;
        }
      }
}

.entry-wrapper {
    position: relative;
    max-width: 140ch;
    margin: 0 auto;
}

.link {
    position: absolute;
    top: -6rem;
}

picture {
    img {
        height: 100%;
    }
}

article > .divider {
    height: 6rem;
    width: 100%;
    margin: 5rem 0;
    @for $i from 2 through length($categories-colors) {
        $color: nth($categories-colors, $i);
        &:nth-child(#{($i - 1) * 2}) {
            @include mixins.smooth-opacity-gradient($color, 6);
            // background: linear-gradient(rgba(255, 0, 0, 0), rgba(255, 0, 0, 1), rgba(255, 0, 0, 0));
        }
    }
}

.divider-bottom {
    height: 3rem;
    @include mixins.smooth-opacity-gradient(black, 3, $both_sides: false);
    width: 100%;
    margin-top: 6em;
}

.visible {
    visibility: visible;
}

.hidden {
    visibility: hidden;
}

p {
    .button {
        background: #0092fc;
        color: #fff;
    }
}

.category-entry {
    display: flex;
    flex-direction: row;
    min-height: 20em;
    > * {
        width: 50%;
        margin: 2rem;
    }
    &:nth-child(2n) {
        flex-direction: row-reverse;
    }
    .text, .illustration {
        display: flex;
        flex-direction: column;
        justify-content: center;
        position: relative;
    }
    .text {
        > * {
            max-width: 70ch;
        }
        > p:first-child {
            font-size: 1.5em;
            font-weight: 700;
        }
    }
    .illustration {
        align-items: center;

        picture {
            max-height: 20em;
            width: 100%;
            text-align: center;               
            img {
            }
        }

        &.interactive {
            background: $static-pic-background;
            font-size: 1.5rem;
        }

        &.static {
            background: orange;
            overflow: hidden;
        }
    }
}

#bottom-shadow, #top-shadow {
    height: 10px;
}

.button {
    cursor: pointer;
    font-size: 1.5rem;
    border-radius: .5em;
    padding: .5em;
    display: inline-block;
    transition: transform .1s ease-in-out;
    &:hover {
        transform: translateY(-.5em);
    }
}

.checkbox {
    font-size: inherit;
    width: calc( 1.5em + 1ch);
    height: 1.5em;
    display: inline-block;
    position: relative;
    span {
        font-size: inherit;   
        width: 1.5em;
        height: 1.5em;
        position: absolute;
        left: 0;
        display: inline-block;
        background: white;
        border: 2px solid gray;
        box-sizing: border-box;
    }
    &:not(.rounded){
        input {
            &:checked + span::after {
                transform: rotate(40deg);
                transform-origin: 100% 66%;
                display: block;
                position: absolute;
                content: "";
                top: 0;
                left: 0;
                height: 125%;
                width: 66%;
                border-right: 6px solid #000;
                border-bottom: 6px solid #000;
                box-sizing: border-box;
            }
        }
    }
    
    &.rounded {
        span {
            border-radius: 100% !important;
            width: 1.7em;
            height: 1.7em;
        }
        input {
            opacity: 0;
            &:checked + span::after {
                background: #000;
                content: "";
                width: 70%;
                height: 70%;
                margin-left: 15%;
                margin-top: 15%;
                position: absolute;
                border-radius: 100%;
            }

        }
    }
}